{"version":3,"sources":["components/ConvertButton.js","components/AmountInput.js","components/FromCurrency.js","components/ToCurrency.js","App.js","index.js"],"names":["ConvertButton","props","className","onClick","event","AmountInput","htmlFor","onChange","target","value","type","id","FromCurrency","name","ToCurrency","App","useState","data","setData","inputValue","setInputValue","fromCurrency","setFromCurrency","toCurrency","setToCurrency","result","setResult","useEffect","fetch","then","response","json","console","log","rate","Math","ceil","ReactDOM","render","document","getElementById"],"mappings":"qSAmBeA,G,WAhBO,SAACC,GAInB,OACI,yBAAKC,UAAU,kBACX,4BACIA,UAAU,SACVC,QAAS,SAAAC,GAAUH,EAAME,QAAQC,KAFrC,cCSGC,G,MAfK,SAACJ,GAEjB,OACI,yBAAKC,UAAU,gBACf,2BAAOI,QAAQ,UAAf,sBACA,6BACA,2BACIC,SAAU,SAAAH,GAAUH,EAAMM,SAASH,EAAMI,OAAOC,QAChDP,UAAU,cACVQ,KAAK,SACLC,GAAG,cC2BAC,G,MArCM,SAACX,GAGlB,OACI,yBAAKC,UAAU,iBAEX,uCAAkB,6BAElB,2BACIK,SAAU,SAAAH,GAAUH,EAAMM,SAASH,EAAMI,OAAOC,QAChDC,KAAK,QACLG,KAAK,OACLF,GAAG,MACHF,MAAM,QACV,2BAAOH,QAAQ,OAAf,OAEA,2BACIC,SAAU,SAAAH,GAAUH,EAAMM,SAASH,EAAMI,OAAOC,QAChDC,KAAK,QACLG,KAAK,OACLF,GAAG,MACHF,MAAM,QACV,2BAAOH,QAAQ,OAAf,OAEA,2BACIC,SAAU,SAAAH,GAAUH,EAAMM,SAASH,EAAMI,OAAOC,QAChDC,KAAK,QACLG,KAAK,OACLF,GAAG,MACHF,MAAM,QACV,2BAAOH,QAAQ,OAAf,UCLGQ,G,MAzBI,SAACb,GAChB,OACI,yBAAKC,UAAU,eAEX,qCAEA,2BACIK,SAAU,SAAAH,GAAUH,EAAMM,SAASH,EAAMI,OAAOC,QAChDC,KAAK,QACLG,KAAK,KACLF,GAAG,MACHF,MAAM,QACV,2BAAOH,QAAQ,OAAf,OAEA,2BACIC,SAAU,SAAAH,GAAUH,EAAMM,SAASH,EAAMI,OAAOC,QAChDC,KAAK,QACLG,KAAK,KACLF,GAAG,MACHF,MAAM,QACV,2BAAOH,QAAQ,OAAf,UC0BGS,MA1Cf,WAEE,IAFa,EAIWC,mBAAS,IAJpB,mBAINC,EAJM,KAIAC,EAJA,OAKuBF,mBAAS,IALhC,mBAKNG,EALM,KAKMC,EALN,OAM2BJ,mBAAS,IANpC,mBAMNK,EANM,KAMQC,EANR,OAOuBN,mBAAS,IAPhC,mBAONO,EAPM,KAOMC,EAPN,OAQeR,mBAAS,IARxB,mBAQNS,EARM,KAQEC,EARF,KA8Bb,OApBEC,qBAAU,WACNC,MATS,iKAUJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAZ,GACFC,EAAQD,QAEjB,IAEHe,QAAQC,IAAIhB,GACZe,QAAQC,IAAId,GACZa,QAAQC,IAAIZ,GACZW,QAAQC,IAAIV,GAUZ,yBAAKrB,UAAU,aACb,wDACA,kBAAC,EAAD,CAAcK,SAAU,SAAAH,GAAK,OAAIkB,EAAgBlB,MACjD,kBAAC,EAAD,CAAaG,SAAU,SAAAE,GAAK,OAAIW,EAAcX,MAC9C,kBAAC,EAAD,CAAYF,SAAU,SAAAH,GAAK,OAAIoB,EAAcpB,MAC7C,kBAAC,EAAD,CAAeD,QAbM,WACvB,IAAM+B,EAAOjB,EAAKI,GAAcE,GAEhC,OADAS,QAAQC,IAAIC,GACLR,EAAUP,EAAae,MAW5B,sCAAYC,KAAKC,KAAKX,MCxC5BY,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.154fc981.chunk.js","sourcesContent":["import React from 'react';\nimport './ConvertButton.css';\n\nconst ConvertButton = (props) => {\n\n\n\n    return (\n        <div className='convert-button'>\n            <button\n                className='button'\n                onClick={event => {props.onClick(event)}}\n            >\n            CONVERT\n            </button>\n        </div>\n    )\n}\n\nexport default ConvertButton;\n","import React from 'react';\nimport './AmountInput.css';\n\nconst AmountInput = (props) => {\n\n    return (\n        <div className='amount-input'>\n        <label htmlFor='amount'>Amount to convert:</label>\n        <br />\n        <input \n            onChange={event => {props.onChange(event.target.value)}}\n            className='input-field'\n            type='number' \n            id='amount' />\n        </div>\n    )\n}\n\nexport default AmountInput;","import React from 'react';\nimport './FromCurrency.css';\n\nconst FromCurrency = (props) => {\n\n\n    return (\n        <div className='from-currency'>\n\n            <span>From:</span><br />\n\n            <input \n                onChange={event => {props.onChange(event.target.value)}}\n                type='radio' \n                name='from' \n                id='BTC' \n                value='BTC' />\n            <label htmlFor=\"BTC\">BTC</label>\n\n            <input \n                onChange={event => {props.onChange(event.target.value)}}\n                type='radio' \n                name='from' \n                id='ETH' \n                value='ETH' />\n            <label htmlFor=\"ETH\">ETH</label>\n\n            <input \n                onChange={event => {props.onChange(event.target.value)}}\n                type='radio' \n                name='from' \n                id='LTC' \n                value='LTC' />\n            <label htmlFor=\"LTC\">LTC</label>\n\n            \n        </div>\n    )\n};\n\nexport default FromCurrency;","import React from 'react';\nimport './ToCurrency.css';\n\nconst ToCurrency = (props) => {\n    return (\n        <div className='to-currency'>\n\n            <span>To:</span>\n\n            <input \n                onChange={event => {props.onChange(event.target.value)}}\n                type='radio' \n                name='to' \n                id='EUR'\n                value='EUR' />\n            <label htmlFor=\"EUR\">EUR</label> \n\n            <input \n                onChange={event => {props.onChange(event.target.value)}}\n                type='radio' \n                name='to' \n                id='USD' \n                value='USD'/>\n            <label htmlFor=\"USD\">USD</label>\n        </div>\n    )\n}\n\nexport default ToCurrency;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ConvertButton from './components/ConvertButton';\nimport AmountInput from './components/AmountInput';\nimport FromCurrency from './components/FromCurrency';\nimport ToCurrency from './components/ToCurrency';\n\nfunction App() {\n\n  const apiUrl =Â 'https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH,LTC&tsyms=USD,EUR,GBPapi_key=85d837f2fd4349e1bbefa23d43a8af9a25d5df8889044eeeb7753177f0b34140';\n\n  const [data, setData] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [fromCurrency, setFromCurrency] = useState('');\n  const [toCurrency, setToCurrency] = useState('');\n  const [result, setResult] = useState('');\n\n    useEffect(() => {\n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(data => {\n                setData(data);\n            })\n    }, []);\n\n    console.log(data);\n    console.log(inputValue);\n    console.log(fromCurrency);\n    console.log(toCurrency);\n\n  const handleConversion = () => {\n    const rate = data[fromCurrency][toCurrency];\n    console.log(rate)\n    return setResult(inputValue * rate);\n  };\n\n\n  return (\n    <div className='container'>\n      <h1>Cryptocurrency Converter</h1>\n      <FromCurrency onChange={event => setFromCurrency(event)}/>\n      <AmountInput onChange={value => setInputValue(value)}/>\n      <ToCurrency onChange={event => setToCurrency(event)}/>\n      <ConvertButton onClick={handleConversion}/>\n      <p>Result: {Math.ceil(result)}</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}